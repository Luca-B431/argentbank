swagger: "2.0"
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: "1.0.0"
  termsOfService: "http://swagger.io/terms/"
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: "#/definitions/Login"
      produces:
        - application/json
      responses:
        "200":
          description: Login Successfully
          schema:
            $ref: "#/definitions/LoginResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: "#/definitions/User"
      produces:
        - application/json
      responses:
        "200":
          description: Signup Successfully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: header
          name: Authorization
          description: Attach Bearer JWT token
          required: true
          type: string
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: "#/definitions/UserProfile"
      produces:
        - application/json
      responses:
        "200":
          description: User profile retrieved successully
          schema:
            $ref: "#/definitions/ApiResponse"
        "400":
          description: Invalid Fields
        "500":
          description: Internal Server Error

  # Mes routes.
  /accounts:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get accounts of a specific user
      description: Return all accounts of this user
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Accounts"
        "400":
          description: Unauthorized - invalid or missing token

        "500":
          description: Internal server error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Create a new account
      description: Create a new account for the authenticated user
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: body
          name: account
          description: Account object to create
          required: true
          schema:
            type: object
            properties:
              name:
                type: string
              balance:
                type: number
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "201":
          description: Account created successfully
          schema:
            $ref: "#/definitions/Accounts"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized - invalid or missing token
        "500":
          description: Internal server error
  /acounts/{id}/transactions:
    get:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Get transactions for a specific account in a month
      description: Returns all transactions for the given account ID in a month
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: id
          description: ID of the account
          required: true
          type: string
        - in: query
          name: Start Date
          description: Start date in YYYY-MM-DD format
          required: false
          type: string
          format: date
        - in: query
          name: End Date
          description: End date in YYYY-MM-DD format
          required: false
          type: string
          format: date
      produces:
        - application/json
      responses:
        "200":
          description: Transactions retrieved successfully
          schema:
            type: array
            items:
              $ref: "#/definitions/Transaction"
        "400":
          description: Invalid account ID
        "401":
          description: Unauthorized - invalid or missing token
        "500":
          description: Internal server error
    post:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Create a new transaction
      description: Create a new transaction for a specific account
      parameters:
        - in: header
          name: Authorization
          required: true
          type: string
          description: Bearer JWT token
        - in: path
          name: id
          required: true
          type: string
          description: ID of the account
        - in: body
          name: transaction
          description: Transaction object to create
          required: true
          schema:
            type: object
            properties:
              date:
                type: string
                format: date-time
              amount:
                type: number
              description:
                type: string
              category:
                type: string
              notes:
                type: string
      consumes:
        - application/json
      produces:
        - application/json
      responses:
        "200":
          description: Transaction created successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "500":
          description: Internal server error
  /accounts/{accountId}/transactions/{transactionId}:
    put:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Update a transaction
      description: Modify informations of a specific transactions
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          required: true
          type: string
        - in: path
          name: transactionId
          required: true
          type: string
        - in: body
          name: body
          description: Information to update
          required: true
          schema:
            type: object
            properties:
              date:
                type: string
                format: date-time
              amount:
                type: number
              description:
                type: string
              category:
                type: string
              notes:
                type: string
      responses:
        "200":
          description: Transaction updated successfully
          schema:
            $ref: "#/definitions/Transaction"
        "400":
          description: Invalid request
        "401":
          description: Unauthorized
        "404":
          description: Transaction not found
        "500":
          description: Internal server error
    delete:
      security:
        - Bearer: []
      tags:
        - Transactions
      summary: Delete a transaction
      description: Permanently deletes a specific transaction by its ID
      parameters:
        - in: header
          name: Authorization
          description: Bearer JWT token
          required: true
          type: string
        - in: path
          name: accountId
          description: ID of the account
          required: true
          type: string
        - in: path
          name: transactionId
          description: ID of the transaction to delete
          required: true
          type: string
      responses:
        "200":
          description: Transaction deleted successfully
        "401":
          description: Unauthorized - invalid or missing token
        "404":
          description: Transaction not found
        "500":
          description: Internal server error
securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
  # Mes définitions
  Transaction:
    type: object
    properties:
      id:
        type: string
      date:
        type: string
        format: date-time
      amount:
        type: number
      description:
        type: string
      category:
        type: string
      notes:
        type: string
  Accounts:
    type: object
    properties:
      name:
        type: string
      balance:
        type: number
        format: float
      id:
        type: string
